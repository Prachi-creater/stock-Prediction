[{"C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\index.js":"1","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\App.js":"2","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\reportWebVitals.js":"3","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Signin.jsx":"4","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Signup.jsx":"5","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Services.jsx":"6","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Home.jsx":"7","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\AboutPage.jsx":"8","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\reuseableComponent\\Appbar.jsx":"9","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\reuseableComponent\\Chart.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":920,"mtime":1619843462502,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3342,"mtime":1619762614534,"results":"15","hashOfConfig":"12"},{"size":4750,"mtime":1619762654142,"results":"16","hashOfConfig":"12"},{"size":2123,"mtime":1620670258101,"results":"17","hashOfConfig":"12"},{"size":1977,"mtime":1620469070887,"results":"18","hashOfConfig":"12"},{"size":1951,"mtime":1620489520495,"results":"19","hashOfConfig":"12"},{"size":4558,"mtime":1620476628808,"results":"20","hashOfConfig":"12"},{"size":1188,"mtime":1620668537779,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ebk3gu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\index.js",[],["49","50"],"C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\App.js",["51"],"import './App.css'\nimport SignIn from './pages/Signin'\nimport SignUp from './pages/Signup'\nimport Home from './pages/Home'\nimport Services from './pages/Services'\nimport AboutPage from './pages/AboutPage'\nimport {BrowserRouter as Router,Switch,Route, Link } from \"react-router-dom\";\n\n\n\nfunction App() {\nreturn (\n    <div style={{margin:'0'}}>\n      <Router>\n        <Switch>\n        <Route exact path='/signin' render={(props)=><SignIn  {...props}></SignIn>}/>\n          <Route exact path='/signup' render={(props)=><SignUp  {...props}></SignUp>}/>\n        <Route exact path='/' render={(props)=><Home  {...props}></Home>}/>\n          <Route exact path='/services' render={(props)=><Services  {...props}></Services>}/>\n          <Route exact path='/aboutus' render={(props)=><AboutPage  {...props}></AboutPage>}/>\n       \n        </Switch>\n        </Router>\n\n\n      \n\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\reportWebVitals.js",[],"C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Signin.jsx",["52"],"import React from 'react'\r\nimport '../pages/style.css';\r\nimport Image from '../Images/stock_1.jpg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '45ch',\r\n\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup.string().required(\"This field is required\"),\r\n    password: yup.string().required(\"This field is required\").min(8, \"Password must be atleast 8 character\"),\r\n\r\n  })\r\n\r\n  const formik = useFormik(\r\n    {\r\n      initialValues: {\r\n        email: \"\",\r\n        password: \"\"\r\n      },\r\n      validationSchema: schema,\r\n      onSubmit: (data) => {\r\n        console.log(data)\r\n      }\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div className=\"parent-div\">\r\n\r\n      <div className=\"outer-div\">\r\n\r\n\r\n        <div className=\"image\">\r\n          <img src={Image} width='700px' height='600px' />\r\n        </div>\r\n\r\n\r\n        <div className=\"login-div\">\r\n\r\n          <center><AccountCircleIcon className=\"logo\" /></center>\r\n          <center><h1>Welcome Back</h1></center>\r\n\r\n          <center><form onSubmit={formik.handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              InputProps={{ endAdornment: <PersonIcon className=\"icon1\" /> }}\r\n              name=\"email\"\r\n              values={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={(formik.touched.email && formik.errors.email) ? true : false}\r\n              helperText={(formik.touched.email && formik.errors.email) ? formik.errors.email : \"\"}\r\n            /><br /><br />\r\n\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              variant=\"outlined\"\r\n              InputProps={{ endAdornment: < VisibilityOffIcon className=\"icon2\" /> }}\r\n              name=\"password\"\r\n              values={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={(formik.touched.password && formik.errors.password) ? true : false}\r\n              helperText={(formik.touched.password && formik.errors.password) ? formik.errors.password : \"\"}\r\n            /><br /><br />\r\n\r\n\r\n            <Button variant=\"contained\" color=\"primary\" id=\"button\" type=\"submit\">\r\n              login now\r\n            </Button>\r\n\r\n            <Link to='/Signup' className=\"link\"><Button variant=\"contained\" color=\"primary\" id=\"button2\" type=\"submit\">\r\n              create account\r\n            </Button></Link>\r\n\r\n          </form>\r\n          </center>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Signup.jsx",["53"],"import React from 'react'\r\nimport '../pages/style.css';\r\nimport Image from '../Images/stock_1.jpg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport Button from '@material-ui/core/Button';\r\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '45ch',\r\n\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const schema = yup.object().shape({\r\n    name: yup.string().required(\"This field is required\"),\r\n    phone: yup.string().required(\"This field is required\"),\r\n    email: yup.string().required(\"This field is required\"),\r\n    password: yup.string().required(\"This field is required\").min(8, \"Password must be atleast 8 character\"),\r\n\r\n  })\r\n\r\n  const formik = useFormik(\r\n    {\r\n      initialValues: {\r\n        name:\"\",\r\n        phone:\"\",\r\n        email: \"\",\r\n        password: \"\"\r\n      },\r\n      validationSchema: schema,\r\n      onSubmit: (data) => {\r\n        console.log(data)\r\n      }\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div className=\"parent-div\">\r\n\r\n      <div className=\"outer-div\">\r\n\r\n\r\n        <div className=\"image\">\r\n          <img src={Image} width='700px' height='600px' />\r\n        </div>\r\n\r\n\r\n        <div className=\"login-div\">\r\n\r\n          <center><LockOpenIcon className=\"logo\" /></center>\r\n          <center><h1>WELCOME</h1></center>\r\n\r\n          <center><form onSubmit={formik.handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField\r\n              id=\"name\"\r\n              label=\"UserName\"\r\n              variant=\"outlined\"\r\n              InputProps={{ endAdornment: <PersonIcon className=\"icon1\" /> }}\r\n              name=\"name\"\r\n              values={formik.values.name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={(formik.touched.email && formik.errors.name) ? true : false}\r\n              helperText={(formik.touched.email && formik.errors.name) ? formik.errors.name: \"\"}\r\n            /><br /><br />\r\n\r\n            <TextField\r\n              id=\"phone\"\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              InputProps={{ endAdornment: < CallIcon className=\"icon1\" /> }}\r\n              name=\"phone\"\r\n              values={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={(formik.touched.email && formik.errors.phone) ? true : false}\r\n              helperText={(formik.touched.email && formik.errors.phone) ? formik.errors.phone: \"\"}\r\n            /><br /><br />\r\n\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              InputProps={{ endAdornment: <PersonIcon className=\"icon1\" /> }}\r\n              name=\"email\"\r\n              values={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={(formik.touched.email && formik.errors.email) ? true : false}\r\n              helperText={(formik.touched.email && formik.errors.email) ? formik.errors.email : \"\"}\r\n            /><br /><br />\r\n\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              variant=\"outlined\"\r\n              InputProps={{ endAdornment: < VisibilityOffIcon className=\"icon2\" /> }}\r\n              name=\"password\"\r\n              values={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={(formik.touched.password && formik.errors.password) ? true : false}\r\n              helperText={(formik.touched.password && formik.errors.password) ? formik.errors.password : \"\"}\r\n            /><br /><br />\r\n\r\n\r\n            <Button variant=\"contained\" color=\"primary\" id=\"button\" type=\"submit\">\r\n              Register\r\n            </Button>\r\n            \r\n            <Link to='/Signin' className=\"link\"><Button variant=\"contained\" color=\"primary\" id=\"button3\" type=\"submit\">\r\n              SignIn <TrendingFlatIcon/>\r\n            </Button></Link>\r\n\r\n          </form>\r\n          </center>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Services.jsx",["54","55"],"C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\Home.jsx",["56"],"import React from 'react'\r\nimport Appbar from '../reuseableComponent/Appbar'\r\nimport '../pages/style.css'\r\nimport Image from '../Images/stoc-vector-2.jpg';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <Appbar />\r\n            <div className='home-outer-div'>\r\n                <div className=\"image\">\r\n                    <img src={Image} width='800px' height='700px'/>\r\n                </div>\r\n                <div className='text-div'>\r\n                    <h1><span style={{ color: \"#001d3d\", fontFamily: 'dancing-script', marginRight: '110px', fontSize: 70, fontWeight: 'bold' }}> Welcome to</span> </h1>\r\n                    <h1><span style={{ color: \"#001d3d\",fontFamily: 'dancing-script', marginLeft: '130px', fontSize: 70,fontWeight: 'bold' }}>Stock World </span> </h1>\r\n                  <p style={{fontSize:20}}>Stock market prediction aims to determine the future movement of the stock value of a financial exchange. The accurate prediction of share price movement will lead to more profit investors can make. Predicting how the stock market will move is one of the most challenging issues due to many factors that involved in the stock prediction, such as interest rates, politics, and economic growth that make the stock market volatile and very hard to predict accurately</p>\r\n                <p style={{fontSize:20}}> The prediction of shares offers huge chances for profit and is a major motivation for research in this area; knowledge of stock movements by a fraction of a second can lead to high profits.</p>\r\n                <p style={{fontSize:20}}>Since stock investment is a major financial market activity, a lack of accurate knowledge and detailed information would lead to an inevitable loss of investment. The prediction of the stock market is a difficult task as market movements are always subject to uncertainties. </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\pages\\AboutPage.jsx",["57"],"import React from 'react'\r\nimport Appbar from '../reuseableComponent/Appbar'\r\nimport '../pages/style.css'\r\nimport Image from '../Images/about_2.jpg';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\nexport default function AboutPage() {\r\n    return (\r\n        <div>\r\n            <Appbar></Appbar>\r\n            <div className='home-outer-div'>\r\n                <div className='text-div'>\r\n                    <h1><span style={{ color: \"#1d3557\", fontFamily: 'dancing-script', marginRight: '110px', fontSize: 70, fontWeight: 'bold' }}> About Us</span> </h1>\r\n                    <p style={{ fontSize: 20 }}>We’re NerdWallet. And we’re not your typical finance company. We believe that everyone should be able to make financial decisions with confidence. We’re building a team of Nerds with the knowledge, passion, and skills to make that happen</p>\r\n                    <p style={{ fontSize: 20 }}> Confident financial decisions stem from clarity. Our mission is to provide the tools, information, and insight people need to navigate all of life's financial decisions. So they can easily find what they need and get back to life.</p>\r\n                    <p style={{ fontSize: 20 }}>Our values shape everything we do. They're not just words written on a wall, but lived and breathed every day by every Nerd. </p>\r\n                    <br></br><br></br>\r\n                    <div className=\"contact\">\r\n                        <MailOutlineIcon id='mailIcon' />\r\n                        <FacebookIcon id='facebookIcon'/>\r\n                        < InstagramIcon id='instaIcon'/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"image\">\r\n                    <img src={Image} width='800px' height='700px' />\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\reuseableComponent\\Appbar.jsx",["58"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button'\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { Link } from 'react-router-dom';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport '../pages/style.css'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '80%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Appbar({history}) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      \r\n      \r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar \r\n      position=\"static\"\r\n      style={{ backgroundColor: '#8093f1',marginTop:'10px', boxShadow:'none'}}>\r\n        <Toolbar>\r\n\r\n        <BarChartIcon id='barIcon'/>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n         <h2 style={{color:'#2b2c28'}}><span style={{color:'white'}}>   Tranding</span>  Stock</h2>\r\n         \r\n          </Typography>\r\n          \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n\r\n            <Link to='/' className=\"link\"><Button color=\"black\" style={{fontWeight:'bold',fontSize:'16px'}}>Home</Button></Link>\r\n            <Link to='/services' className=\"link\"><Button color=\"black\" style={{fontWeight:'bold',color:'black',fontSize:'16px'}}>services</Button></Link>\r\n            <Link to='/aboutus' className=\"link\"><Button color=\"black\" style={{fontWeight:'bold',fontSize:'16px'}}>About us</Button></Link>\r\n\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      \r\n      \r\n\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\pra12\\Documents\\GitHub\\stock-Prediction\\src\\reuseableComponent\\Chart.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":47,"nodeType":"65","messageId":"66","endLine":7,"endColumn":51},{"ruleId":"67","severity":1,"message":"68","line":53,"column":11,"nodeType":"69","endLine":53,"endColumn":59},{"ruleId":"67","severity":1,"message":"68","line":59,"column":11,"nodeType":"69","endLine":59,"endColumn":59},{"ruleId":"63","severity":1,"message":"70","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"71","line":29,"column":10,"nodeType":"65","messageId":"66","endLine":29,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":12,"column":21,"nodeType":"69","endLine":12,"endColumn":68},{"ruleId":"67","severity":1,"message":"68","line":27,"column":21,"nodeType":"69","endLine":27,"endColumn":69},{"ruleId":"63","severity":1,"message":"72","line":66,"column":9,"nodeType":"65","messageId":"66","endLine":66,"endColumn":30},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'state' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]